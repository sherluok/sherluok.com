{
  "Next Layout": {
    "prefix": ["layout"],
    "description": "next.js layout.tsx in app dir",
    "scope": "typescriptreact",
    "body": [
      "import { PropsWithChildren } from 'react';",
      "import * as s from './layout.css';",
      "",
      "export default function $1Layout(props: PropsWithChildren) {",
      "  return (",
      "    <div className={s.container}>",
      "      ${0:{props.children\\}}",
      "    </div>",
      "  );",
      "}"
    ]
  },
  "Next Page": {
    "prefix": ["page"],
    "description": "next.js page.tsx in app dir",
    "scope": "typescriptreact",
    "body": [
      "import * as s from './page.css';",
      "",
      "export default function $1Page() {",
      "  return (",
      "    <div className={s.container}>",
      "      $0",
      "    </div>",
      "  );",
      "}"
    ]
  },
  "Vanilla Extract": {
    "prefix": ["css", "vanilla-extract"],
    "body": [
      "import { style } from '@vanilla-extract/css';",
      "",
      "export const container = style({});",
      "",
    ],
  },
  "JSX Component": {
    "prefix": ["tsx", "component"],
    "body": [
      "import { cx } from '^/lib/css';",
      "import { ReactNode } from 'react';",
      "import * as s from './${1:$TM_FILENAME_BASE}.css';",
      "",
      "interface ${0:${TM_FILENAME_BASE/(^|\\-)([a-z])/${2:/upcase}/g}}Props {",
      "  className?: string;",
      "  children?: ReactNode;",
      "}",
      "",
      "export function ${0:${TM_FILENAME_BASE/(^|\\-)([a-z])/${2:/upcase}/g}}(props: ${0:${TM_FILENAME_BASE/(^|\\-)([a-z])/${2:/upcase}/g}}Props) {",
      "  const { className, children, ...restProps } = props;",
      "  return (",
      "    <div className={cx(s.container, className)}>",
      "    </div>",
      "  );",
      "}",
    ],
    "scope": "typescriptreact",
  },
}
