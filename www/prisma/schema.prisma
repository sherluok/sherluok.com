// https://www.prisma.io/docs/orm/prisma-schema/overview/data-sources
datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

// https://www.prisma.io/docs/orm/prisma-schema/overview/generators
generator client {
  provider = "prisma-client-js"
  output   = "./client"
}

// -------------------------------------------
// https://authjs.dev/reference/adapter/prisma

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  posts         Post[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// -------------------------------------------
// Contents

// 语言
// https://www.prisma.io/docs/orm/prisma-schema/data-model/models#defining-enums
enum Language {
  en
  zh
  zhCN
}

// 草稿（未正式发布的文章）
model Draft {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  postId    String
  post      Post      @relation(fields: [postId], references: [id])
  source    String
}

// 文章（已正式发布的文章）
model Post {
  id                   String    @id @default(cuid())
  source               String
  authorId             String
  author               User      @relation(fields: [authorId], references: [id])
  title                String
  description          String
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
  deletedAt            DateTime? // 删除按钮分为归档和彻底删除，归档时记录不会被删除，而是通过该字段标记
  published            Boolean   @default(false)
  drafts               Draft[]
  // 翻译
  language             Language
  // https://www.prisma.io/docs/orm/prisma-schema/data-model/relations/self-relations#one-to-many-self-relations
  translatedFromPostId String?
  translatedFrom       Post?     @relation("translations", fields: [translatedFromPostId], references: [id])
  translations         Post[]    @relation("translations")
  // 系列文章
  // https://www.prisma.io/docs/orm/prisma-schema/data-model/relations/self-relations#one-to-one-self-relations
  parentPostId         String?   @unique
  parentPost           Post?     @relation("nested", fields: [parentPostId], references: [id])
  childPost            Post?     @relation("nested")
  prevPostId           String?   @unique
  prevPost             Post?     @relation("series", fields: [prevPostId], references: [id])
  nextPost             Post?     @relation("series")
}
